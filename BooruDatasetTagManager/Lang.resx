<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="fileToolStripMenuItem.Text" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Dataset</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Image tags</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>All tags</value>
  </data>
  <data name="loadLossFromFileToolStripMenuItem.Text" xml:space="preserve">
    <value>Load loss from file</value>
  </data>
  <data name="openFolderToolStripMenuItem.Text" xml:space="preserve">
    <value>Load folder...</value>
  </data>
  <data name="saveAllChangesToolStripMenuItem.Text" xml:space="preserve">
    <value>Save all changes</value>
  </data>
  <data name="settingsToolStripMenuItem.Text" xml:space="preserve">
    <value>Settings...</value>
  </data>
  <data name="showPreviewToolStripMenuItem.Text" xml:space="preserve">
    <value>Show preview</value>
  </data>
  <data name="toolStripButton1.Text" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="toolStripButton10.Text" xml:space="preserve">
    <value>Paste tags</value>
  </data>
  <data name="toolStripButton11.Text" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="toolStripButton12.Text" xml:space="preserve">
    <value>Remove from all</value>
  </data>
  <data name="toolStripButton13.Text" xml:space="preserve">
    <value>Find in dataset</value>
  </data>
  <data name="toolStripButton14.Text" xml:space="preserve">
    <value>Reset filter</value>
  </data>
  <data name="toolStripButton15.Text" xml:space="preserve">
    <value>Paste from clipboard</value>
  </data>
  <data name="toolStripButton16.Text" xml:space="preserve">
    <value>Show formed tag text</value>
  </data>
  <data name="toolStripButton17.Text" xml:space="preserve">
    <value>Set current tag list to all</value>
  </data>
  <data name="toolStripButton18.Text" xml:space="preserve">
    <value>Multi-tag filtering mode</value>
  </data>
  <data name="toolStripButton19.Text" xml:space="preserve">
    <value>Add selected 'All tags' to image tags</value>
  </data>
  <data name="toolStripButton2.Text" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="toolStripButton20.Text" xml:space="preserve">
    <value>Remove selected 'All tags' from image tags</value>
  </data>
  <data name="toolStripButton21.Text" xml:space="preserve">
    <value>Add to filtered</value>
  </data>
  <data name="toolStripButton22.Text" xml:space="preserve">
    <value>Remove from filtered</value>
  </data>
  <data name="toolStripButton23.Text" xml:space="preserve">
    <value>Fing tag in \"All tags\"</value>
  </data>
  <data name="toolStripButton24.Text" xml:space="preserve">
    <value>Filter in all tags</value>
  </data>
  <data name="toolStripButton25.Text" xml:space="preserve">
    <value>Remove filter</value>
  </data>
  <data name="toolStripButton3.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="toolStripButton4.Text" xml:space="preserve">
    <value>Up</value>
  </data>
  <data name="toolStripButton5.Text" xml:space="preserve">
    <value>Down</value>
  </data>
  <data name="toolStripButton6.Text" xml:space="preserve">
    <value>Change all tags/common tags</value>
  </data>
  <data name="toolStripButton7.Text" xml:space="preserve">
    <value>Add to all</value>
  </data>
  <data name="toolStripButton8.Text" xml:space="preserve">
    <value>Replace tag</value>
  </data>
  <data name="toolStripButton9.Text" xml:space="preserve">
    <value>Copy tags</value>
  </data>
  <data name="toolStripMenuItem1.Text" xml:space="preserve">
    <value>Open folder</value>
  </data>
  <data name="toolStripMenuItem2.Text" xml:space="preserve">
    <value>Delete image and tags</value>
  </data>
  <data name="translateTagsToolStripMenuItem.Text" xml:space="preserve">
    <value>Translate tags</value>
  </data>
  <data name="viewToolStripMenuItem.Text" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="setting.button1.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="setting.button2.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="setting.button3.Text" xml:space="preserve">
    <value>Change...</value>
  </data>
  <data name="setting.button4.Text" xml:space="preserve">
    <value>Change...</value>
  </data>
  <data name="setting.checkBox1.Text" xml:space="preserve">
    <value>Load only manual translations into autocomplete</value>
  </data>
  <data name="setting.checkBox2.Text" xml:space="preserve">
    <value>Fix tags on loading (replace '_' -&gt; ' ')</value>
  </data>
  <data name="setting.checkBox3.Text" xml:space="preserve">
    <value>Prompt to save changes when changing selection</value>
  </data>
  <data name="setting.checkBox4.Text" xml:space="preserve">
    <value>Fix tags on saving ('('-&gt;'\\(', ')'-&gt;'\\)' )</value>
  </data>
  <data name="setting.label1.Text" xml:space="preserve">
    <value>Translation language</value>
  </data>
  <data name="setting.label10.Text" xml:space="preserve">
    <value>Tags gridview font</value>
  </data>
  <data name="setting.label12.Text" xml:space="preserve">
    <value>Tags gridview row height</value>
  </data>
  <data name="setting.label13.Text" xml:space="preserve">
    <value>Autocomplete font</value>
  </data>
  <data name="setting.label2.Text" xml:space="preserve">
    <value>Preview image size</value>
  </data>
  <data name="setting.label3.Text" xml:space="preserve">
    <value>Translation service</value>
  </data>
  <data name="setting.label4.Text" xml:space="preserve">
    <value>Autocomplete mode</value>
  </data>
  <data name="setting.label5.Text" xml:space="preserve">
    <value>Autocomplete sort</value>
  </data>
  <data name="setting.label6.Text" xml:space="preserve">
    <value>Separator on load</value>
  </data>
  <data name="setting.label7.Text" xml:space="preserve">
    <value>Separator on save</value>
  </data>
  <data name="setting.label8.Text" xml:space="preserve">
    <value>Show autocomplete after</value>
  </data>
  <data name="setting.label9.Text" xml:space="preserve">
    <value>chars</value>
  </data>
  <data name="setting.tabPage1.Text" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="setting.tabPage2.Text" xml:space="preserve">
    <value>Translations</value>
  </data>
  <data name="setting.tabPage3.Text" xml:space="preserve">
    <value>UI</value>
  </data>
  <data name="addtag.form.Title" xml:space="preserve">
    <value>Add tag</value>
  </data>
  <data name="addtag.label1.Text" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="addtag.label2.Text" xml:space="preserve">
    <value>Adding position</value>
  </data>
  <data name="cancel.button.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="edit.form.Title" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="filter.form.Title" xml:space="preserve">
    <value>All tags filter</value>
  </data>
  <data name="filter.label1.Text" xml:space="preserve">
    <value>Filter text</value>
  </data>
  <data name="label3.commontags.Text" xml:space="preserve">
    <value>Common tags</value>
  </data>
  <data name="ok.button.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="preview.form.Title" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="replace.form.Title" xml:space="preserve">
    <value>Replace all</value>
  </data>
  <data name="replace.label1.Text" xml:space="preserve">
    <value>Source tag</value>
  </data>
  <data name="replace.label2.Text" xml:space="preserve">
    <value>New tag</value>
  </data>
  <data name="setting.form.Title" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="startUpLoadingMsg" xml:space="preserve">
    <value>Please wait while the tags are loading.\nWhen changing csv or txt files,\nthe initial loading of tags may take a long time.</value>
  </data>
  <data name="statusLabelImagesOrTagsNotSelected" xml:space="preserve">
    <value>Images or tags not selected!</value>
  </data>
  <data name="statusLabelSettingsHaveBeenSaved" xml:space="preserve">
    <value>Settings have been saved</value>
  </data>
  <data name="statusLabelTheNumberOfSelectedImagesIsNotEqualTo1" xml:space="preserve">
    <value>The number of selected images is not equal to 1</value>
  </data>
  <data name="statusLabelTheNumberOfSelectedImagesMustBeGreaterThan0" xml:space="preserve">
    <value>The number of selected images must be greater than 0</value>
  </data>
  <data name="statusLabelTheNumberOfSelectedImagesMustBeGreaterThan1" xml:space="preserve">
    <value>The number of selected images must be greater than 1</value>
  </data>
</root>